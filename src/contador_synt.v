/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "src/counter.v:21" *)
module counter(CLK, ENABLE, RESET, D, MODO, Q, RCO, LOAD);
  (* src = "src/counter.v:42" *)
  wire _000_;
  (* src = "src/counter.v:42" *)
  wire [3:0] _001_;
  (* src = "src/counter.v:42" *)
  wire _002_;
  (* src = "src/counter.v:42" *)
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  (* src = "src/counter.v:23" *)
  input CLK;
  (* src = "src/counter.v:26" *)
  input [3:0] D;
  (* src = "src/counter.v:24" *)
  input ENABLE;
  (* src = "src/counter.v:31" *)
  output LOAD;
  (* src = "src/counter.v:27" *)
  input [1:0] MODO;
  (* src = "src/counter.v:29" *)
  output [3:0] Q;
  (* src = "src/counter.v:30" *)
  output RCO;
  (* src = "src/counter.v:25" *)
  input RESET;
  (* init = 1'b0 *)
  (* src = "src/counter.v:39" *)
  wire temp;
  NOT _063_ (
    .A(temp),
    .Y(_004_)
  );
  NOT _064_ (
    .A(RESET),
    .Y(_005_)
  );
  NAND_3 _065_ (
    .A(ENABLE),
    .B(_005_),
    .C(_004_),
    .Y(_006_)
  );
  NOT _066_ (
    .A(Q[0]),
    .Y(_007_)
  );
  NOT _067_ (
    .A(MODO[1]),
    .Y(_008_)
  );
  NOT _068_ (
    .A(MODO[0]),
    .Y(_009_)
  );
  NOR_2 _069_ (
    .A(_009_),
    .B(_008_),
    .Y(_010_)
  );
  NOR_2 _070_ (
    .A(_010_),
    .B(_007_),
    .Y(_011_)
  );
  NOR_3 _071_ (
    .A(D[0]),
    .B(_009_),
    .C(_008_),
    .Y(_012_)
  );
  NOR_3 _072_ (
    .A(_012_),
    .B(_011_),
    .C(_006_),
    .Y(_001_[0])
  );
  NOT _073_ (
    .A(Q[1]),
    .Y(_013_)
  );
  NOR_2 _074_ (
    .A(_013_),
    .B(_007_),
    .Y(_014_)
  );
  NOR_2 _075_ (
    .A(Q[1]),
    .B(Q[0]),
    .Y(_015_)
  );
  NOR_2 _076_ (
    .A(MODO[0]),
    .B(_008_),
    .Y(_016_)
  );
  NOT _077_ (
    .A(_016_),
    .Y(_017_)
  );
  NOR_3 _078_ (
    .A(_017_),
    .B(_015_),
    .C(_014_),
    .Y(_018_)
  );
  NOR_2 _079_ (
    .A(_015_),
    .B(_014_),
    .Y(_019_)
  );
  NOR_2 _080_ (
    .A(_019_),
    .B(MODO[1]),
    .Y(_020_)
  );
  NOT _081_ (
    .A(D[1]),
    .Y(_021_)
  );
  NOR_3 _082_ (
    .A(_021_),
    .B(_009_),
    .C(_008_),
    .Y(_022_)
  );
  NOR_3 _083_ (
    .A(_022_),
    .B(_020_),
    .C(_018_),
    .Y(_023_)
  );
  NOR_2 _084_ (
    .A(_023_),
    .B(_006_),
    .Y(_001_[1])
  );
  NOT _085_ (
    .A(Q[2]),
    .Y(_024_)
  );
  NOR_2 _086_ (
    .A(_015_),
    .B(_024_),
    .Y(_025_)
  );
  NOR_3 _087_ (
    .A(Q[2]),
    .B(Q[1]),
    .C(Q[0]),
    .Y(_026_)
  );
  NOR_2 _088_ (
    .A(_026_),
    .B(_025_),
    .Y(_027_)
  );
  NOR_2 _089_ (
    .A(_009_),
    .B(MODO[1]),
    .Y(_028_)
  );
  NOR_2 _090_ (
    .A(_028_),
    .B(_027_),
    .Y(_029_)
  );
  NOR_2 _091_ (
    .A(MODO[0]),
    .B(MODO[1]),
    .Y(_030_)
  );
  NOR_3 _092_ (
    .A(_030_),
    .B(_026_),
    .C(_025_),
    .Y(_031_)
  );
  NOR_2 _093_ (
    .A(_031_),
    .B(_029_),
    .Y(_032_)
  );
  NOT _094_ (
    .A(D[2]),
    .Y(_033_)
  );
  NOR_3 _095_ (
    .A(_033_),
    .B(_009_),
    .C(_008_),
    .Y(_034_)
  );
  NOR_2 _096_ (
    .A(_014_),
    .B(Q[2]),
    .Y(_035_)
  );
  NAND_3 _097_ (
    .A(Q[2]),
    .B(Q[1]),
    .C(Q[0]),
    .Y(_036_)
  );
  NOT _098_ (
    .A(_036_),
    .Y(_037_)
  );
  NOR_3 _099_ (
    .A(_037_),
    .B(_035_),
    .C(_017_),
    .Y(_038_)
  );
  NOR_3 _100_ (
    .A(_038_),
    .B(_034_),
    .C(_032_),
    .Y(_039_)
  );
  NOR_2 _101_ (
    .A(_039_),
    .B(_006_),
    .Y(_001_[2])
  );
  NOR_2 _102_ (
    .A(_025_),
    .B(Q[3]),
    .Y(_040_)
  );
  NAND_2 _103_ (
    .A(_025_),
    .B(Q[3]),
    .Y(_041_)
  );
  NAND_2 _104_ (
    .A(_041_),
    .B(_030_),
    .Y(_042_)
  );
  NOR_2 _105_ (
    .A(_042_),
    .B(_040_),
    .Y(_043_)
  );
  NOT _106_ (
    .A(_028_),
    .Y(_044_)
  );
  NOT _107_ (
    .A(Q[3]),
    .Y(_045_)
  );
  NOR_2 _108_ (
    .A(_026_),
    .B(_045_),
    .Y(_046_)
  );
  NAND_2 _109_ (
    .A(_015_),
    .B(_024_),
    .Y(_047_)
  );
  NOR_2 _110_ (
    .A(_047_),
    .B(Q[3]),
    .Y(_048_)
  );
  NOR_2 _111_ (
    .A(_048_),
    .B(_046_),
    .Y(_049_)
  );
  NOR_2 _112_ (
    .A(_049_),
    .B(_044_),
    .Y(_050_)
  );
  NAND_3 _113_ (
    .A(_036_),
    .B(_016_),
    .C(Q[3]),
    .Y(_051_)
  );
  NAND_3 _114_ (
    .A(D[3]),
    .B(MODO[0]),
    .C(MODO[1]),
    .Y(_052_)
  );
  NAND_3 _115_ (
    .A(_037_),
    .B(_016_),
    .C(_045_),
    .Y(_053_)
  );
  NAND_3 _116_ (
    .A(_053_),
    .B(_052_),
    .C(_051_),
    .Y(_054_)
  );
  NOR_3 _117_ (
    .A(_054_),
    .B(_050_),
    .C(_043_),
    .Y(_055_)
  );
  NOR_2 _118_ (
    .A(_055_),
    .B(_006_),
    .Y(_001_[3])
  );
  NOR_2 _119_ (
    .A(ENABLE),
    .B(RESET),
    .Y(_003_)
  );
  NOR_3 _120_ (
    .A(_041_),
    .B(MODO[0]),
    .C(MODO[1]),
    .Y(_056_)
  );
  NOR_3 _121_ (
    .A(_036_),
    .B(_017_),
    .C(_045_),
    .Y(_057_)
  );
  NOR_3 _122_ (
    .A(_044_),
    .B(_047_),
    .C(Q[3]),
    .Y(_058_)
  );
  NOR_3 _123_ (
    .A(_058_),
    .B(_057_),
    .C(_056_),
    .Y(_059_)
  );
  NOR_2 _124_ (
    .A(_059_),
    .B(_006_),
    .Y(_002_)
  );
  NAND_2 _125_ (
    .A(ENABLE),
    .B(_005_),
    .Y(_060_)
  );
  NOR_2 _126_ (
    .A(_010_),
    .B(temp),
    .Y(_061_)
  );
  NOR_2 _127_ (
    .A(LOAD),
    .B(_004_),
    .Y(_062_)
  );
  NOR_3 _128_ (
    .A(_062_),
    .B(_061_),
    .C(_060_),
    .Y(_000_)
  );
  DFF _129_ (
    .C(CLK),
    .D(_001_[0]),
    .Q(Q[0])
  );
  DFF _130_ (
    .C(CLK),
    .D(_001_[1]),
    .Q(Q[1])
  );
  DFF _131_ (
    .C(CLK),
    .D(_001_[2]),
    .Q(Q[2])
  );
  DFF _132_ (
    .C(CLK),
    .D(_001_[3]),
    .Q(Q[3])
  );
  DFF _133_ (
    .C(CLK),
    .D(_002_),
    .Q(RCO)
  );
  DFF _134_ (
    .C(CLK),
    .D(_000_),
    .Q(LOAD)
  );
  DFF _135_ (
    .C(CLK),
    .D(_003_),
    .Q(temp)
  );
endmodule
